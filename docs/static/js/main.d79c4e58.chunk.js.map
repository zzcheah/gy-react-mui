{"version":3,"sources":["slices/appSlice.js","components/request/AddRequestForm.js","graphql/query.js","app/theme.js","components/Toast.js","components/auth/AuthHeader.js","components/auth/LoginForm.js","components/auth/SideCard.js","pages/LoginPage.js","components/auth/SignupForm.js","pages/SignupPage.js","pages/LandingPage.js","pages/subpages/UserDetail.js","pages/RegisterWorkerPage.js","slices/thunks.js","pages/subpages/RequestDetail.js","components/worker/WorkerApplicationsPage.js","components/docker_images/ImageRequestsPage.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js","components/util/CustomCard.js","components/layout/SideBar.js","components/layout/NotificationPopover.js","components/layout/AccountPopover.js","components/layout/CustomAppBar.js","components/dialogs/AddWorkerDialog.js","components/dialogs/AddImageDialog.js","components/dialogs/NewIRDialog.js","components/layout/CustomSpeedDial.js","components/layout/DrawerLayout.js","components/util/UnderMaintenance.js","components/util/EmptyInbox.js","components/dashboard/ImageRequests.js","components/dashboard/TopImages.js","components/dashboard/TotalIssues.js","components/dashboard/TotalRequests.js","components/dashboard/TotalUsers.js","components/dashboard/WelcomeBack.js","components/dashboard/WorkerApplication.js","components/dashboard/WorkersStatus.js","components/request/MyRequestList.js","pages/Dashboard.js","components/user/AvatarPicker.js","components/user/EditProfileForm.js","pages/subpages/EditProfile.js","pages/subpages/WorkerDetail.js","pages/UsersPage.js","pages/WorkersPage.js","app/constants.js","graphql/mutation.js","components/util/CustomTable.js","slices/authSlice.js","components/util/StatusChips.js"],"names":["appSlice","createSlice","name","initialState","loading","toast","reducers","toggleLoading","state","addToast","action","payload","actions","AddRequestForm","data","useQuery","GET_DOCKER_IMAGES","useMutation","CREATE_REQUEST","createRequest","dispatch","useDispatch","history","useHistory","userStatus","useSelector","auth","user","status","useState","progress","fileInfo","image","tag","rawParam","file","message","selectedImage","selectedTag","index","setState","uploadFile","e","onUploadProgress","formData","FormData","append","axios","post","BACKEND_HOST","headers","upload","event","Math","round","loaded","total","allImages","dockerImages","allTags","tags","alert","to","sx","mb","variant","component","gutterBottom","pb","onSubmit","preventDefault","then","console","log","input","param","Buffer","from","JSON","stringify","toString","inputFiles","variables","severity","push","catch","err","autoComplete","required","id","label","value","autoFocus","onChange","target","m","width","minWidth","disabled","map","item","color","theme","colors","default","style","body","fontSize","locale","height","jsObject","length","size","type","hidden","files","float","mt","MY_REQUESTS","gql","WORKER_APPLICATIONS","IMAGE_REQUESTS","NOTIFICATION_LIST","LIST_WORKERS","GET_ALL_USERS","GET_ALL_REQUESTS","scrollBarStyle","backgroundColor","borderRadius","border","createMuiTheme","shape","palette","success","main","components","MuiButton","styleOverrides","root","MuiChip","fontWeight","MuiPaper","boxShadow","MuiTableContainer","MuiAppBar","backdropFilter","MuiMenu","MuiList","Toast","app","duration","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Alert","AuthHeader","position","padding","right","src","alt","Copyright","Typography","align","Link","href","Date","getFullYear","useStyles","makeStyles","paper","display","flexDirection","form","marginTop","spacing","submit","margin","LoginForm","classes","email","password","credentials","setCredentials","handleChange","Container","maxWidth","className","loginUser","TextField","fullWidth","FormControlLabel","control","Checkbox","Button","Grid","container","xs","onClick","Box","minHeight","justifyContent","breakpoints","down","SideCard","msg","imgPath","Paper","elevation","s","i","createStyles","flexGrow","alignItems","paddingTop","LoginPage","SignupForm","setInput","registerUser","SignupPage","LandingPage","client","useApolloClient","query","result","UserInfo","props","users","find","role","phone","pl","CustomCard","Chip","CustomDivider","Divider","UserDetail","match","params","error","DrawerLayout","allUsers","RegisterWorkerPage","maxTasks","res","submitWorkerApplication","md","helperText","RequestInfo","requests","request","createdAt","encodedParam","outputFiles","assignedTo","remark","atob","decoded","parse","overflow","STATUS_CHIPS","window","RequestDetail","myRequests","WATable","APPROVE_WORKER","approveWorker","CircularProgress","rows","applications","arr","forEach","button","update","cache","modify","fields","workerApplications","existingWARefs","readField","filter","waRef","createData","CustomTable","columns","WorkerApplicationsPage","IRTable","APPROVE_IMAGE","approveImage","imageRequests","existingIRRefs","irRef","ImageRequestsPage","LoadingBlur","children","blur","opacity","pointerEvents","LinearProgress","PrivateRoute","rest","exact","render","React","createElement","pathname","location","App","jwt","httpLink","createHttpLink","uri","authLink","setContext","_","authorization","ApolloClient","link","concat","InMemoryCache","admin_routes","route","path","user_routes","ThemeProvider","CssBaseline","basename","GENERAL_PAGES","page","COMMON_PAGES","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","a","response","counterSlice","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","store","configureStore","reducer","appReducer","counter","counterReducer","authReducer","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","p","Logo","UserCard","Avatar","mr","ml","Person","pt","SideBar","mobileOpen","handleDrawerToggle","undefined","handleNavigate","currentTarget","getAttribute","drawer","List","ListItem","ListItemText","primary","text","selected","includes","ListItemIcon","icon","Hidden","mdUp","implementation","Drawer","drawerPaper","ModalProps","keepMounted","mdDown","NotificationPopover","handle","anchorEl","handleMenuClose","read","unread","SET_READ_NOTIFICATION","setReadNotification","popover","transformOrigin","maxHeight","handleClick","Popover","secondary","ListItemAvatar","Info","content","AccountPopover","noWrap","Home","Settings","paddingBottom","logoutUser","recolor","CustomAppBar","setAnchorEl","activeMenu","setActiveMenu","useLazyQuery","myQueryExecutor","handleMenuOpen","accountMenuId","accountHandle","notificationMenuId","notificationHandle","useEffect","notificationList","isRead","AppBar","appBar","Toolbar","IconButton","aria-label","edge","menuButton","aria-controls","aria-haspopup","Badge","badgeContent","defaultValue","ipAddress","AddWorkerDialog","handleClose","REGISTER_WORKER","registerWorker","isNaN","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","pr","sm","DialogActions","description","AddImageDialog","ADD_NEW_IMAGE","addNewImage","multiline","maxRows","NewIRDialog","ADD_IMAGE_REQUEST","addImageRequest","CustomSpeedDial","currentDialog","setCurrentDialog","admin_actions","user_actions","transform","bottom","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","SpeedDialAction","tooltipTitle","drawerWidth","up","flexShrink","marginLeft","marginRight","toolbar","mixins","boxSizing","setMobileOpen","UnderMaintenance","setCounter","interval","setInterval","clearInterval","EmptyInbox","title","offset","flexBasis","paddingLeft","DataRender","ImageRequests","Ranking","sorted","images","slice","sort","b","usageCount","dense","disableGutters","TopImages","TotalIssues","TotalRequests","allRequests","TotalUsers","WelcomeBack","bgcolor","WorkerApplication","styles","list","WorkersStatus","workers","workerList","WorkerList","worker","MyRequestsList","statusChip","Dashboard","marginBottom","lg","AvatarPicker","accept","multiple","htmlFor","textAlign","EditProfileForm","EditProfile","WorkerInfo","runningTasks","WorkerDetail","UserTable","UsersPage","WorkerTable","runMax","WorkersPage","DASHBOARD","MyDashboard","USERS","People","WORKERS","Work","ADMIN","USER","paddingRight","flex","table","setPage","rowsPerPage","setRowsPerPage","stickyHeader","column","row","hover","tabIndex","format","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","localStorage","getItem","profile","getTime","jwt_decode","exp","authSlice","clearAuth","setAuth","setItem","clear","NEW","COMPLETED","PROCESSING","ERROR","DEFAULT"],"mappings":"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","file":"static/js/main.d79c4e58.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  toast: null,\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    toggleLoading: (state) => {\r\n      state.loading = !state.loading;\r\n    },\r\n    addToast: (state, action) => {\r\n      state.toast = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleLoading, addToast } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  LinearProgress,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CREATE_REQUEST } from \"../../graphql/mutation\";\r\nimport { addToast, toggleLoading } from \"../../slices/appSlice\";\r\nimport DrawerLayout from \"../layout/DrawerLayout\";\r\nimport axios from \"axios\";\r\nimport { BACKEND_HOST } from \"../../app/constants\";\r\nimport { GET_DOCKER_IMAGES } from \"../../graphql/query\";\r\nimport JSONInput from \"react-json-editor-ajrm\";\r\nimport locale from \"react-json-editor-ajrm/locale/en\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nconst upload = (file, onUploadProgress) => {\r\n  let formData = new FormData();\r\n\r\n  formData.append(\"file\", file);\r\n\r\n  return axios.post(BACKEND_HOST + \"files/add\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n    onUploadProgress,\r\n  });\r\n};\r\n\r\nexport default function AddRequestForm() {\r\n  const { data } = useQuery(GET_DOCKER_IMAGES);\r\n  const [createRequest] = useMutation(CREATE_REQUEST);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  // @ts-ignore\r\n  const userStatus = useSelector((state) => state.auth.user.status);\r\n  const [state, setState] = useState({\r\n    name: \"Untitled\",\r\n    progress: 0,\r\n    fileInfo: \"\",\r\n    image: \"\",\r\n    tag: \"\",\r\n    rawParam: \"\",\r\n    file: [],\r\n    message: \"\",\r\n    selectedImage: \"\",\r\n    selectedTag: \"\",\r\n    index: \"\",\r\n  });\r\n\r\n  const selectFile = (event) => {\r\n    const file = event.target.files[0];\r\n    const { name, size } = file;\r\n    const fileInfo = `${name}, size: ${size}`;\r\n    setState({\r\n      ...state,\r\n      file,\r\n      fileInfo,\r\n    });\r\n  };\r\n\r\n  const uploadFile = (e) => {\r\n    const file = state.file;\r\n\r\n    setState({\r\n      ...state,\r\n      progress: 0,\r\n    });\r\n\r\n    return upload(file, (event) => {\r\n      setState({\r\n        ...state,\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(toggleLoading());\r\n    uploadFile()\r\n      .then((data) => {\r\n        console.log(\"successfully uploading file, creating request\");\r\n        console.log(data);\r\n        const input = {\r\n          name: state.name,\r\n          image: state.image + \":\" + state.tag,\r\n          param: Buffer.from(JSON.stringify(state.rawParam)).toString(\"base64\"),\r\n          inputFiles: [data.data],\r\n        };\r\n        console.log(input);\r\n        return createRequest({ variables: { input } });\r\n      })\r\n      .then(() => {\r\n        dispatch(\r\n          addToast({\r\n            message: \"Successfully Created Request\",\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n        history.push(\"/dashbaord\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        addToast({\r\n          message: err.toString(),\r\n          severity: \"error\",\r\n        });\r\n        setState({\r\n          ...state,\r\n          progress: 0,\r\n          message: err.toString(),\r\n        });\r\n        dispatch(toggleLoading());\r\n      });\r\n  };\r\n\r\n  const allImages = data ? data.dockerImages : [];\r\n\r\n  const allTags = state.index !== \"\" ? data.dockerImages[state.index].tags : [];\r\n\r\n  if (userStatus !== \"Active\") {\r\n    alert(\"User is not allowed to make request until approved by admin\");\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <Container sx={{ mb: 6 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ pb: 2 }}>\r\n          <b>Add New Request</b>\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            autoComplete=\"name\"\r\n            name=\"name\"\r\n            required\r\n            variant=\"standard\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            value={state.name}\r\n            autoFocus\r\n            onChange={(e) => {\r\n              setState({ ...state, name: e.target.value });\r\n            }}\r\n            sx={{ m: 2, width: 450 }}\r\n          />\r\n          <br />\r\n\r\n          <FormControl sx={{ minWidth: 400, m: 2 }}>\r\n            <InputLabel>Docker Image</InputLabel>\r\n            <Select\r\n              required\r\n              value={state.index}\r\n              onChange={(e) => {\r\n                const index = e.target.value;\r\n                const image = allImages[index].name;\r\n                setState({ ...state, index, image, tag: \"\" });\r\n              }}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                <em>Docker Images</em>\r\n              </MenuItem>\r\n              {allImages.map((item, index) => (\r\n                <MenuItem key={item.id} value={index}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl sx={{ minWidth: 300, m: 2 }}>\r\n            <InputLabel>Tags</InputLabel>\r\n            <Select\r\n              required\r\n              value={state.tag}\r\n              onChange={(e) => {\r\n                setState({ ...state, tag: e.target.value });\r\n              }}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                <em>Image Tags</em>\r\n              </MenuItem>\r\n              {allTags.map((item) => (\r\n                <MenuItem key={item.id} value={item.tag}>\r\n                  {item.tag}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl sx={{ minWidth: 300, m: 2 }}>\r\n            <Typography color=\"text.secondary\" gutterBottom>\r\n              JSON Parameters\r\n            </Typography>\r\n            <JSONInput\r\n              id=\"a_unique_id\"\r\n              theme=\"light_mitsuketa_tribute\"\r\n              colors={{\r\n                default: \"#000000\",\r\n              }}\r\n              style={{\r\n                body: {\r\n                  fontSize: \"14px\",\r\n                },\r\n              }}\r\n              width=\"622px\"\r\n              locale={locale}\r\n              height=\"420px\"\r\n              onChange={(e) => {\r\n                setState({ ...state, rawParam: e.jsObject });\r\n              }}\r\n            />\r\n          </FormControl>\r\n\r\n          <Box sx={{ m: 2 }}>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              {state.file.length === 0 ? \"No file selected.. \" : state.fileInfo}\r\n            </Typography>\r\n            <LinearProgress\r\n              variant=\"determinate\"\r\n              value={state.progress}\r\n              sx={{ height: \"10px\", m: \"15px 0 \", width: \"300px\" }}\r\n            />\r\n            <Button component=\"label\" variant=\"outlined\" size=\"small\">\r\n              Upload File\r\n              <input type=\"file\" hidden onChange={selectFile} />\r\n            </Button>\r\n          </Box>\r\n\r\n          <br />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            // @ts-ignore\r\n            color=\"success\"\r\n            size=\"large\"\r\n            sx={{ float: \"right\", mt: 3 }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n\r\n        {/* {loading ? <div>Loading...</div> : null}\r\n        {error ? `Error! ${error.message}` : null}\r\n        {data ? <div /> : null} */}\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n}\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const MY_REQUESTS = gql`\r\n  query {\r\n    myRequests {\r\n      id\r\n      name\r\n      status\r\n      createdAt\r\n      title\r\n      image\r\n      encodedParam\r\n      inputFiles\r\n      outputFiles\r\n      assignedTo\r\n      remark\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REQUEST_COUNTS = gql`\r\n  query {\r\n    countRequests\r\n  }\r\n`;\r\n\r\nexport const WORKER_APPLICATIONS = gql`\r\n  query WorkerApplications {\r\n    workerApplications {\r\n      id\r\n      name\r\n      maxTasks\r\n      ipAddress\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IMAGE_REQUESTS = gql`\r\n  query ImageRequests {\r\n    imageRequests {\r\n      id\r\n      image\r\n      tag\r\n      remark\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NOTIFICATION_LIST = gql`\r\n  query NotificationList {\r\n    notificationList {\r\n      id\r\n      isRead\r\n      user\r\n      content\r\n      severity\r\n      createdAt\r\n      link\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DOCKER_IMAGES = gql`\r\n  query DockerImages {\r\n    dockerImages {\r\n      id\r\n      name\r\n      tags {\r\n        id\r\n        tag\r\n        description\r\n      }\r\n      usageCount\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIST_WORKERS = gql`\r\n  query ListWorkers {\r\n    workerList {\r\n      id\r\n      name\r\n      maxTasks\r\n      ipAddress\r\n      lastActive\r\n      status\r\n      runningTasks\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_USERS = gql`\r\n  query GetAllUsers {\r\n    allUsers {\r\n      id\r\n      name\r\n      email\r\n      phone\r\n      status\r\n      role\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_REQUESTS = gql`\r\n  query GetAllRequests {\r\n    allRequests {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const scrollBarStyle = {\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"0.4em\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.00)\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    backgroundColor: \"rgba(0,0,0,.1)\",\r\n    borderRadius: \"20px\",\r\n    border: \"6px solid transparent\",\r\n    // outline: \"1px solid slategrey\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb:hover\": {\r\n    backgroundColor: \"#a8bbbf\",\r\n  },\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n  shape: {\r\n    borderRadius: 16,\r\n  },\r\n  palette: {\r\n    success: {\r\n      main: \"rgb(0, 171, 85)\",\r\n    },\r\n    // warning: {\r\n    //   main: \"#FF8800\",\r\n    // },\r\n    // error: {\r\n    //   main: \"#CC0000\",\r\n    // },\r\n  },\r\n  components: {\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: 8,\r\n        },\r\n      },\r\n    },\r\n    MuiChip: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: 8,\r\n          // color: \"white\",\r\n          fontWeight: \"bolder\",\r\n          fontSize: \"12px\",\r\n        },\r\n      },\r\n    },\r\n    MuiPaper: {\r\n      styleOverrides: {\r\n        root: {\r\n          ...scrollBarStyle,\r\n          boxShadow:\r\n            \"rgb(145 158 171 / 24%) 0px 0px 2px 0px, rgb(145 158 171 / 24%) 0px 16px 32px -4px\",\r\n        },\r\n      },\r\n    },\r\n    MuiTableContainer: {\r\n      styleOverrides: {\r\n        root: {\r\n          ...scrollBarStyle,\r\n        },\r\n      },\r\n    },\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: \"rgba(255, 255, 255, 0.72)\",\r\n          boxShadow: \"none\",\r\n          backdropFilter: \"blur(6px)\",\r\n        },\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      styleOverrides: {\r\n        root: {\r\n          // margin: \"0\",\r\n          // padding: \"0\",\r\n        },\r\n      },\r\n    },\r\n    MuiList: {\r\n      styleOverrides: {\r\n        root: {\r\n          ...scrollBarStyle,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { Alert, Snackbar } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToast } from \"../slices/appSlice\";\r\n\r\nconst Toast = () => {\r\n  const dispatch = useDispatch();\r\n  const toast = useSelector((state) => state.app.toast);\r\n  if (toast === null) return null;\r\n\r\n  const { message, severity, duration } = toast;\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open\r\n      autoHideDuration={duration ? duration : 3000}\r\n      onClose={() => dispatch(addToast(null))}\r\n    >\r\n      <Alert severity={severity ? severity : \"info\"}>{message}</Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst AuthHeader = () => {\r\n  return (\r\n    <header>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          padding: \"32px 40px\",\r\n          right: \"0px\",\r\n        }}\r\n      >\r\n        <Link to=\"/\">\r\n          <img src={\"logo.png\"} alt=\"logo\" height=\"64px\" />\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AuthHeader;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../../slices/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        GPU Yard\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst LoginForm = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [credentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      loginUser({\r\n        credentials,\r\n        history,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n          Sign in to GPU Yard\r\n        </Typography>\r\n        <Typography component=\"h2\" variant=\"body2\" gutterBottom>\r\n          Enter your details below.\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <div className={classes.submit}>\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"large\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Link href=\"#\" variant=\"body2\">\r\n              Forgot password?\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link\r\n              component=\"button\"\r\n              variant=\"body2\"\r\n              onClick={() => history.push(\"/signup\")}\r\n            >\r\n              {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { makeStyles, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    margin: theme.spacing(3),\r\n    width: \"464px\",\r\n    minHeight: \"600px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  image: {\r\n    width: \"100%\",\r\n    padding: \"50px 0px\",\r\n  },\r\n}));\r\n\r\nconst SideCard = ({ msg, imgPath }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      <Typography component=\"p\" variant=\"h4\" gutterBottom>\r\n        {msg.map((s, i) => (\r\n          <b key={i}>{s}</b>\r\n        ))}\r\n      </Typography>\r\n      <div className={classes.image}>\r\n        <img src={imgPath} alt=\"welcome\" width=\"100%\"></img>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SideCard;\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthHeader from \"../components/auth/AuthHeader\";\r\nimport LoginForm from \"../components/auth/LoginForm\";\r\nimport SideCard from \"../components/auth/SideCard\";\r\n\r\nconst message = [\"Hi there,\", <br />, \"Welcome back.\"];\r\nconst imgPath = \"images/welcome.png\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      // backgroundColor: theme.palette.background.paper,\r\n      \"& *\": {\r\n        // maxHeight: \"100%\",\r\n      },\r\n    },\r\n    form: {\r\n      flexGrow: 2,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        paddingTop: \"64px\",\r\n        alignItems: \"start\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst LoginPage = () => {\r\n  const classes = useStyles();\r\n  // @ts-ignore\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  if (user) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AuthHeader />\r\n      <SideCard msg={message} imgPath={imgPath} />\r\n      <div className={classes.form}>\r\n        <LoginForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../slices/authSlice\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        GPU Yard\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignupForm = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    dispatch(\r\n      registerUser({\r\n        input,\r\n        history,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n          Get started\r\n        </Typography>\r\n        <Typography component=\"h2\" variant=\"body2\" gutterBottom>\r\n          Enter your details below.\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div className={classes.submit}>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              // @ts-ignore\r\n              color=\"success\"\r\n              size=\"large\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Link\r\n              component=\"button\"\r\n              variant=\"body2\"\r\n              onClick={() => history.push(\"/login\")}\r\n            >\r\n              Already have an account? Sign in\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SideCard from \"../components/auth/SideCard\";\r\nimport AuthHeader from \"../components/auth/AuthHeader\";\r\nimport SignupForm from \"../components/auth/SignupForm\";\r\n\r\nconst message = [\"Avoid the hassle of setting up GPU-accelerated environment.\"];\r\nconst imgPath = \"images/register.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    // alignItems: \"stretch\",\r\n    \"& *\": {\r\n      // maxHeight: \"100%\",\r\n    },\r\n  },\r\n  form: {\r\n    flexGrow: \"1\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      paddingTop: \"64px\",\r\n      alignItems: \"start\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst SignupPage = () => {\r\n  const classes = useStyles();\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  if (user) return <Redirect to=\"/dashboard\" />;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AuthHeader />\r\n      <SideCard msg={message} imgPath={imgPath} />\r\n      <div className={classes.form}>\r\n        <SignupForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","import { useApolloClient } from \"@apollo/client\";\r\nimport { Button, Container, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toggleLoading } from \"../slices/appSlice\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nconst LandingPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const handleClick = (e) => {\r\n    dispatch(toggleLoading());\r\n  };\r\n\r\n  // console.log(\"Rendering Landing Page\")\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Typography variant=\"h2\" component=\"h1\">\r\n          Hello,\r\n        </Typography>\r\n        <Button onClick={handleClick}>Toggle Loading</Button>\r\n        <Button\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            history.push(\"/signup\");\r\n          }}\r\n        >\r\n          Signup\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            history.push(\"/dashboard\");\r\n          }}\r\n        >\r\n          Dashboard\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            client\r\n              .query({\r\n                query: gql`\r\n                  query {\r\n                    countRequests\r\n                  }\r\n                `,\r\n              })\r\n              .then((result) => console.log(result))\r\n              .catch((err) => console.log(err));\r\n          }}\r\n        >\r\n          Get Request Count\r\n        </Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Chip, Container, Divider, Typography } from \"@material-ui/core\";\r\nimport DrawerLayout from \"../../components/layout/DrawerLayout\";\r\nimport CustomCard from \"../../components/util/CustomCard\";\r\nimport { GET_ALL_USERS } from \"../../graphql/query\";\r\n\r\nconst UserDetail = (props) => {\r\n  const id = props.match.params.id;\r\n\r\n  const { loading, error, data } = useQuery(GET_ALL_USERS);\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <Container sx={{ mb: 6 }}>\r\n        {loading && !error ? (\r\n          \"loading...\"\r\n        ) : (\r\n          <UserInfo users={data.allUsers} id={id} />\r\n        )}\r\n        {error ? `Error! ${error.message}` : null}\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nconst UserInfo = (props) => {\r\n  const { users, id } = props;\r\n  const user = users.find((user) => user.id === id);\r\n  if (user == null) return <div>User not found!!</div>;\r\n  const { name, role, status, email, phone } = user;\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4, pl: 2 }}>\r\n        <b>User Detail</b>\r\n      </Typography>\r\n      <CustomCard>\r\n        <Typography variant=\"h6\">User ID:</Typography>\r\n        <Typography variant=\"body1\">{id}</Typography>\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Name:</Typography>\r\n        <Typography variant=\"body1\">{name}</Typography>\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Role:</Typography>\r\n        <Typography variant=\"body1\">{role}</Typography>\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Status:</Typography>\r\n        <Chip\r\n          label={status ? status : \"Checking\"}\r\n          // @ts-ignore\r\n          color={status === \"Active\" ? \"success\" : \"default\"}\r\n        />\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Email:</Typography>\r\n        <Typography variant=\"body1\">{email}</Typography>\r\n\r\n        {phone ? (\r\n          <div>\r\n            <CustomDivider />\r\n            <Typography variant=\"h6\">Phone:</Typography>\r\n            <Typography variant=\"body1\">{phone}</Typography>\r\n          </div>\r\n        ) : null}\r\n      </CustomCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomDivider = () => {\r\n  return <Divider sx={{ mt: 3, mb: 2 }} />;\r\n};\r\n\r\nexport default UserDetail;\r\n","import { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AuthHeader from \"../components/auth/AuthHeader\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { submitWorkerApplication } from \"../slices/thunks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function RegisterWorkerPage() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState({\r\n    maxTasks: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    dispatch(\r\n      submitWorkerApplication({\r\n        input,\r\n        history,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthHeader />\r\n      <br />\r\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n        <Typography component=\"h1\" variant=\"h5\" gutterBottom>\r\n          New Worker Application\r\n        </Typography>\r\n        <Typography component=\"h2\" variant=\"body2\" gutterBottom>\r\n          Register your interest in setting up a task worker.\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Worker Nickname\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={8}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Your Email Address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                helperText=\"We will send you the worker id once it is approved\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"maxTasks\"\r\n                label=\"Max Concurrent Jobs\"\r\n                id=\"maxTasks\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div className={classes.submit}>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              // @ts-ignore\r\n              color=\"success\"\r\n              size=\"large\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { BACKEND_HOST } from \"../app/constants\";\r\nimport { toggleLoading, addToast } from \"./appSlice\";\r\n\r\nexport const submitWorkerApplication = ({ input, history }) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleLoading());\r\n    console.log(\"Registering User\");\r\n\r\n    axios\r\n      .post(BACKEND_HOST + \"api/workerApplication\", input)\r\n      .then((res) => {\r\n        dispatch(\r\n          addToast({\r\n            message: res.data,\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n        dispatch(toggleLoading());\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          addToast({\r\n            message: err.toString(),\r\n            severity: \"error\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n      });\r\n  };\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Box, Button, Container, Divider, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { BACKEND_HOST } from \"../../app/constants\";\r\nimport DrawerLayout from \"../../components/layout/DrawerLayout\";\r\nimport CustomCard from \"../../components/util/CustomCard\";\r\nimport { STATUS_CHIPS } from \"../../components/util/StatusChips\";\r\nimport { MY_REQUESTS } from \"../../graphql/query\";\r\n\r\nconst RequestDetail = (props) => {\r\n  const id = props.match.params.id;\r\n\r\n  const { loading, error, data } = useQuery(MY_REQUESTS);\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <Container sx={{ mb: 6 }}>\r\n        {loading && !error ? (\r\n          \"loading...\"\r\n        ) : (\r\n          <RequestInfo requests={data.myRequests} id={id} />\r\n        )}\r\n        {error ? `Error! ${error.message}` : null}\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nconst RequestInfo = (props) => {\r\n  const { requests, id } = props;\r\n  const request = requests.find((request) => request.id === id);\r\n  if (request == null) return <div>Request not found!!</div>;\r\n  const {\r\n    name,\r\n    status,\r\n    createdAt,\r\n    image,\r\n    encodedParam,\r\n    // inputFiles,\r\n    outputFiles,\r\n    assignedTo,\r\n    remark,\r\n  } = request;\r\n\r\n  console.log(atob(encodedParam));\r\n\r\n  const decoded = JSON.stringify(JSON.parse(atob(encodedParam)), null, 2);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4, pl: 2 }}>\r\n        <b>Request Detail</b>\r\n      </Typography>\r\n      <CustomCard>\r\n        <Box sx={{ overflow: \"clip\" }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Request ID:\r\n          </Typography>\r\n          <Typography variant=\"body1\">{id}</Typography>\r\n\r\n          <CustomDivider />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Name:\r\n          </Typography>\r\n          <Typography variant=\"body1\">{name}</Typography>\r\n\r\n          <CustomDivider />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Image:\r\n          </Typography>\r\n          <Typography variant=\"body1\">{image}</Typography>\r\n\r\n          <CustomDivider />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Status:\r\n          </Typography>\r\n          {STATUS_CHIPS[status]\r\n            ? STATUS_CHIPS[status]\r\n            : STATUS_CHIPS[\"DEFAULT\"]}\r\n\r\n          <CustomDivider />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Assigned To:\r\n          </Typography>\r\n          <Typography variant=\"body1\">{assignedTo}</Typography>\r\n\r\n          {outputFiles && outputFiles.length === 1 ? (\r\n            <div>\r\n              <CustomDivider />\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Output File:\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  window.open(\r\n                    BACKEND_HOST + \"files/\" + outputFiles[0],\r\n                    \"_blank\"\r\n                  );\r\n                }}\r\n              >\r\n                Download\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n\r\n          <CustomDivider />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Creation Time:\r\n          </Typography>\r\n          <Typography variant=\"body1\">{createdAt}</Typography>\r\n\r\n          <CustomDivider />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Parameters:\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"pre\">\r\n            {decoded}\r\n          </Typography>\r\n\r\n          {remark ? (\r\n            <div>\r\n              <CustomDivider />\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Remark:\r\n              </Typography>\r\n              <Typography variant=\"body1\">{remark}</Typography>\r\n            </div>\r\n          ) : null}\r\n        </Box>\r\n      </CustomCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomDivider = () => {\r\n  return <Divider sx={{ mt: 3, mb: 2 }} />;\r\n};\r\n\r\nexport default RequestDetail;\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { APPROVE_WORKER } from \"../../graphql/mutation\";\r\nimport { WORKER_APPLICATIONS } from \"../../graphql/query\";\r\nimport DrawerLayout from \"../layout/DrawerLayout\";\r\nimport CustomTable from \"../util/CustomTable\";\r\n\r\nfunction createData(applications, approveWorker) {\r\n  var arr = [];\r\n  applications.forEach((item) => {\r\n    const { id, name, maxTasks, email, createdAt } = item;\r\n    const button = (\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          approveWorker({\r\n            variables: { input: id },\r\n            update(cache) {\r\n              cache.modify({\r\n                fields: {\r\n                  workerApplications(existingWARefs, { readField }) {\r\n                    return existingWARefs.filter(\r\n                      (waRef) => id !== readField(\"id\", waRef)\r\n                    );\r\n                  },\r\n                },\r\n              });\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        Approve\r\n      </Button>\r\n    );\r\n    arr.push({ id, name, maxTasks, email, createdAt, button });\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst WorkerApplicationsPage = () => {\r\n  return (\r\n    <DrawerLayout>\r\n      <Container>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h1\"\r\n          gutterBottom\r\n          sx={{ pb: 2, pl: 2 }}\r\n        >\r\n          <b>Worker Applications</b>\r\n        </Typography>\r\n        <WATable />\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nconst WATable = () => {\r\n  const { loading, error, data } = useQuery(WORKER_APPLICATIONS);\r\n  const [approveWorker] = useMutation(APPROVE_WORKER);\r\n\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <div>`Error! ${error.message}`</div>;\r\n\r\n  const columns = [\r\n    { id: \"id\", label: \"ID\" },\r\n    { id: \"name\", label: \"Name\", minWidth: 200 },\r\n    { id: \"maxTasks\", label: \"Max Tasks\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"createdAt\", label: \"Creation Time\" },\r\n    { id: \"button\", label: \"\" },\r\n  ];\r\n\r\n  const rows = createData(data.workerApplications, approveWorker);\r\n\r\n  return <CustomTable rows={rows} columns={columns} />;\r\n};\r\n\r\nexport default WorkerApplicationsPage;\r\n","import { useMutation, useQuery } from \"@apollo/client\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { APPROVE_IMAGE } from \"../../graphql/mutation\";\r\nimport { IMAGE_REQUESTS } from \"../../graphql/query\";\r\nimport DrawerLayout from \"../layout/DrawerLayout\";\r\nimport CustomTable from \"../util/CustomTable\";\r\n\r\nfunction createData(requests, approveImage) {\r\n  var arr = [];\r\n  requests.forEach((item) => {\r\n    const { id, image, tag, remark, createdAt } = item;\r\n    const button = (\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          approveImage({\r\n            variables: { input: id },\r\n            update(cache) {\r\n              cache.modify({\r\n                fields: {\r\n                  imageRequests(existingIRRefs, { readField }) {\r\n                    return existingIRRefs.filter(\r\n                      (irRef) => id !== readField(\"id\", irRef)\r\n                    );\r\n                  },\r\n                },\r\n              });\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        Approve\r\n      </Button>\r\n    );\r\n    arr.push({ id, image, tag, remark, createdAt, button });\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst ImageRequestsPage = () => {\r\n  return (\r\n    <DrawerLayout>\r\n      <Container>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h1\"\r\n          gutterBottom\r\n          sx={{ pb: 2, pl: 2 }}\r\n        >\r\n          <b>Image Requests</b>\r\n        </Typography>\r\n        <IRTable />\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nconst IRTable = () => {\r\n  const { loading, error, data } = useQuery(IMAGE_REQUESTS);\r\n  const [approveImage] = useMutation(APPROVE_IMAGE);\r\n\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <div>`Error! ${error.message}`</div>;\r\n\r\n  const columns = [\r\n    { id: \"id\", label: \"ID\" },\r\n    { id: \"image\", label: \"Image\", minWidth: 200 },\r\n    { id: \"tag\", label: \"Tag\" },\r\n    { id: \"remark\", label: \"Remark\" },\r\n    { id: \"createdAt\", label: \"Creation Time\" },\r\n    { id: \"button\", label: \"\" },\r\n  ];\r\n\r\n  const rows = createData(data.imageRequests, approveImage);\r\n\r\n  return <CustomTable rows={rows} columns={columns} />;\r\n};\r\n\r\nexport default ImageRequestsPage;\r\n","// @ts-nocheck\r\nimport React from \"react\";\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { CssBaseline, LinearProgress, ThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport theme from \"./app/theme\";\r\nimport Toast from \"./components/Toast\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport SignupPage from \"./pages/SignupPage\";\r\nimport LandingPage from \"./pages/LandingPage\";\r\nimport { BACKEND_HOST, COMMON_PAGES, GENERAL_PAGES } from \"./app/constants\";\r\nimport UserDetail from \"./pages/subpages/UserDetail\";\r\nimport AddRequestForm from \"./components/request/AddRequestForm\";\r\nimport RegisterWorkerPage from \"./pages/RegisterWorkerPage\";\r\nimport RequestDetail from \"./pages/subpages/RequestDetail\";\r\nimport WorkerApplicationsPage from \"./components/worker/WorkerApplicationsPage\";\r\nimport ImageRequestsPage from \"./components/docker_images/ImageRequestsPage\";\r\n\r\nfunction LoadingBlur({ children }) {\r\n  const loading = useSelector((state) => state.app.loading);\r\n\r\n  const style = {\r\n    blur: {\r\n      opacity: loading ? \"0.3\" : \"1\",\r\n      pointerEvents: loading ? \"none\" : \"\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? <LinearProgress /> : null}\r\n      <div style={style.blur}>{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ component, ...rest }) {\r\n  const auth = useSelector((state) => state.auth.user);\r\n  return (\r\n    <Route\r\n      exact\r\n      {...rest}\r\n      render={(props) =>\r\n        auth ? (\r\n          React.createElement(component, props)\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  console.log(\"Rendering App\");\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const { jwt, user } = auth;\r\n\r\n  const httpLink = createHttpLink({\r\n    uri: BACKEND_HOST + \"graphql\",\r\n  });\r\n\r\n  const authLink = setContext((_, { headers }) => {\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: jwt ? `Bearer ${jwt}` : \"\",\r\n      },\r\n    };\r\n  });\r\n\r\n  // const defaultOptions = {\r\n  //   watchQuery: {\r\n  //     fetchPolicy: \"no-cache\",\r\n  //     errorPolicy: \"ignore\",\r\n  //   },\r\n  //   query: {\r\n  //     fetchPolicy: \"no-cache\",\r\n  //     errorPolicy: \"all\",\r\n  //   },\r\n  // };\r\n\r\n  const client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n    // defaultOptions: defaultOptions,\r\n  });\r\n\r\n  const admin_routes = [\r\n    {\r\n      route: <PrivateRoute key={0} path=\"/users/:id\" component={UserDetail} />,\r\n    },\r\n    {\r\n      route: (\r\n        <PrivateRoute\r\n          key={1}\r\n          path=\"/imageRequests\"\r\n          component={ImageRequestsPage}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      route: (\r\n        <PrivateRoute\r\n          key={2}\r\n          path=\"/workerApplications\"\r\n          component={WorkerApplicationsPage}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const user_routes = [\r\n    {\r\n      route: (\r\n        <PrivateRoute key={0} path=\"/addRequest\" component={AddRequestForm} />\r\n      ),\r\n    },\r\n    {\r\n      route: (\r\n        <PrivateRoute key={1} path=\"/requests/:id\" component={RequestDetail} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ApolloProvider client={client}>\r\n        <ThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <BrowserRouter basename=\"/gy-react-mui\">\r\n            <Toast />\r\n            <LoadingBlur>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={LandingPage} />\r\n                <Route exact path=\"/login\" component={LoginPage} />\r\n                <Route exact path=\"/signup\" component={SignupPage} />\r\n                <Route exact path=\"/newWorker\" component={RegisterWorkerPage} />\r\n                {user\r\n                  ? GENERAL_PAGES[user.role].map((item, index) => (\r\n                      <PrivateRoute\r\n                        exact\r\n                        key={index}\r\n                        path={item.path}\r\n                        component={item.page}\r\n                      />\r\n                    ))\r\n                  : null}\r\n                {COMMON_PAGES.map((item, index) => (\r\n                  <PrivateRoute\r\n                    exact\r\n                    key={index}\r\n                    path={item.path}\r\n                    component={item.page}\r\n                  />\r\n                ))}\r\n                {user && user.role === \"ADMIN\"\r\n                  ? admin_routes.map((item) => item.route)\r\n                  : null}\r\n                {user && user.role === \"USER\"\r\n                  ? user_routes.map((item) => item.route)\r\n                  : null}\r\n                <Redirect to=\"/\" />\r\n              </Switch>\r\n            </LoadingBlur>\r\n          </BrowserRouter>\r\n        </ThemeProvider>\r\n      </ApolloProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport authReducer from \"../slices/authSlice\";\nimport appReducer from \"../slices/appSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    counter: counterReducer,\n    auth: authReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Paper } from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport default function CustomCard({ children }) {\r\n    return (\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n            {children}\r\n        </Paper>\r\n    );\r\n}","import { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Drawer,\r\n  Hidden,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { GENERAL_PAGES } from \"../../app/constants\";\r\nimport { Person } from \"@material-ui/icons\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Link to=\"/\">\r\n      <div\r\n        style={{\r\n          padding: \"10px 10px 0px 10px\",\r\n          height: \"86px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <img src={\"/logo.png\"} alt=\"logo\" height=\"100%\" />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction UserCard({ user }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"rgba(145, 158, 171, 0.16)\",\r\n        p: 2,\r\n        m: 2,\r\n        display: \"flex\",\r\n        borderRadius: \"16px\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Avatar sx={{ p: 2, mr: 2, ml: 1 }}>\r\n          <Person />\r\n        </Avatar>\r\n      </div>\r\n      <div>\r\n        <Typography variant=\"body2\" sx={{ pt: \"2px\" }}>\r\n          <b>{user.name}</b>\r\n        </Typography>\r\n\r\n        <Typography variant=\"caption\" sx={{ color: \"text.secondary\" }}>\r\n          {user.role ? user.role : \"??? Fuck off man\"}\r\n        </Typography>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst SideBar = (props) => {\r\n  const { window, mobileOpen, handleDrawerToggle, classes } = props;\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.auth.user);\r\n  const path = history.location.pathname;\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  const handleNavigate = (e) => {\r\n    history.push(e.currentTarget.getAttribute(\"path\"));\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Logo />\r\n      <UserCard user={user} />\r\n\r\n      <List sx={{ \"& div\": { pl: 2 } }}>\r\n        <ListItem>\r\n          <ListItemText primary={<strong>GENERAL</strong>} />\r\n        </ListItem>\r\n        {GENERAL_PAGES[user.role].map((item, index) => (\r\n          <ListItem\r\n            button\r\n            key={index}\r\n            path={item.path}\r\n            id={item.text}\r\n            selected={path.includes(item.path)}\r\n            onClick={handleNavigate}\r\n          >\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown implementation=\"css\">\r\n        <Drawer\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          variant=\"permanent\"\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","// @ts-nocheck\r\nimport { useMutation } from \"@apollo/client\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Popover,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Info } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SET_READ_NOTIFICATION } from \"../../graphql/mutation\";\r\n\r\nconst NotificationPopover = ({ handle, data }) => {\r\n  const { open, anchorEl, handleMenuClose } = handle;\r\n  const history = useHistory();\r\n  const { read, unread } = data;\r\n  const [setReadNotification] = useMutation(SET_READ_NOTIFICATION);\r\n\r\n  const props = {\r\n    popover: {\r\n      open,\r\n      anchorEl,\r\n      onClose: handleMenuClose,\r\n      anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      },\r\n      transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      },\r\n      sx: {\r\n        maxHeight: \"70vh\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleClick = (item) => {\r\n    setReadNotification({ variables: { input: item.id } });\r\n    history.push(item.link);\r\n  };\r\n\r\n  return (\r\n    <Popover {...props.popover}>\r\n      <Box sx={{ padding: \"16px 26px\" }}>\r\n        <Typography variant=\"h6\">\r\n          <b>Notifications</b>\r\n        </Typography>\r\n        <Typography sx={{ color: \"text.secondary\" }} variant=\"body2\">\r\n          You have {unread.length} unread messages\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      {unread.length > 0 ? (\r\n        <List sx={{ width: \"360px\" }}>\r\n          <ListItem>\r\n            <ListItemText secondary=\"NEW\"></ListItemText>\r\n          </ListItem>\r\n          {unread.map((item) => (\r\n            <ListItem\r\n              key={item.id}\r\n              button\r\n              onClick={() => handleClick(item)}\r\n              sx={{ backgroundColor: \"rgba(145, 158, 171, 0.16)\", mb: \"2px\" }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <Info />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item.content} secondary={item.createdAt} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      ) : null}\r\n      {read.length > 0 ? (\r\n        <List sx={{ width: \"360px\" }}>\r\n          <ListItem>\r\n            <ListItemText secondary=\"BEFORE THAT\"></ListItemText>\r\n          </ListItem>\r\n          {read.map((item) => (\r\n            <ListItem\r\n              key={item.id}\r\n              button\r\n              onClick={() => handleClick(item)}\r\n              sx={{ mb: \"2px\" }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <Info />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item.content} secondary={item.createdAt} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      ) : null}\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default NotificationPopover;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Home, Person, Settings } from \"@material-ui/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../slices/authSlice\";\r\n\r\nconst AccountPopover = ({ handle }) => {\r\n  const { open, anchorEl, handleMenuClose } = handle;\r\n  const user = useSelector((state) => state.auth.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser(history));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const props = {\r\n    popover: {\r\n      open,\r\n      anchorEl,\r\n      onClose: handleMenuClose,\r\n      anchorOrigin: {\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      },\r\n      transformOrigin: {\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Popover {...props.popover}>\r\n      <Box sx={{ padding: \"16px 26px\", maxWidth: \"200px\" }}>\r\n        <Typography noWrap variant=\"h6\">\r\n          <b>{user.name}</b>\r\n        </Typography>\r\n        <Typography noWrap sx={{ color: \"text.secondary\" }} variant=\"body2\">\r\n          {user.email}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <List sx={{ width: \"200px\", p: 1 }}>\r\n        <ListItem button onClick={() => history.push(\"/\")}>\r\n          <ListItemIcon>\r\n            <Home />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Home\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() => history.push(\"/editProfile\")}>\r\n          <ListItemIcon>\r\n            <Person />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Profile\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() => history.push(\"/settings\")}>\r\n          <ListItemIcon>\r\n            <Settings />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Settings\" />\r\n        </ListItem>\r\n      </List>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          paddingBottom: \"16px\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          sx={{\r\n            width: \"80%\",\r\n            color: \"text.primary\",\r\n          }}\r\n          onClick={handleLogout}\r\n        >\r\n          <b>Logout</b>\r\n        </Button>\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default AccountPopover;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NotificationPopover from \"./NotificationPopover\";\r\nimport AccountPopover from \"./AccountPopover\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { NOTIFICATION_LIST } from \"../../graphql/query\";\r\n\r\nconst recolor = {\r\n  color: \"rgb(33, 43, 54)\",\r\n};\r\n\r\nconst CustomAppBar = (props) => {\r\n  const { classes, handleDrawerToggle } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [activeMenu, setActiveMenu] = useState(null);\r\n  // const [read, setRead] = useState([]);\r\n  // const [unread, setUnread] = useState([]);\r\n  const [myQueryExecutor, { data }] = useLazyQuery(NOTIFICATION_LIST);\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setActiveMenu(null);\r\n  };\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setActiveMenu(event.currentTarget.id);\r\n  };\r\n\r\n  const accountMenuId = \"account-menu\";\r\n  const accountHandle = {\r\n    open: activeMenu === accountMenuId,\r\n    handleMenuClose,\r\n    anchorEl,\r\n  };\r\n\r\n  const notificationMenuId = \"notification-menu\";\r\n  const notificationHandle = {\r\n    open: activeMenu === notificationMenuId,\r\n    handleMenuClose,\r\n    anchorEl,\r\n  };\r\n\r\n  useEffect(() => {\r\n    myQueryExecutor();\r\n  }, [myQueryExecutor]);\r\n\r\n  var read = [];\r\n  var unread = [];\r\n  if (data) {\r\n    data.notificationList.forEach((item) => {\r\n      if (item.isRead) {\r\n        read.push(item);\r\n      } else unread.push(item);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            // color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n            sx={recolor}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <IconButton\r\n              id={notificationMenuId}\r\n              aria-label=\"show 17 new notifications\"\r\n              aria-controls={notificationMenuId}\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n              onClick={handleMenuOpen}\r\n              sx={recolor}\r\n            >\r\n              <Badge badgeContent={unread.length} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              id={accountMenuId}\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={accountMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenuOpen}\r\n              color=\"inherit\"\r\n              sx={recolor}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <NotificationPopover\r\n        handle={notificationHandle}\r\n        data={{ unread, read }}\r\n      />\r\n      <AccountPopover handle={accountHandle} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REGISTER_WORKER } from \"../../graphql/mutation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToast, toggleLoading } from \"../../slices/appSlice\";\r\n\r\nconst defaultValue = {\r\n  name: \"\",\r\n  maxTasks: \"\",\r\n  ipAddress: \"\",\r\n};\r\n\r\nexport default function AddWorkerDialog(props) {\r\n  const dispatch = useDispatch();\r\n  const { open, handleClose } = props;\r\n  const [input, setInput] = useState(defaultValue);\r\n  const [registerWorker] = useMutation(REGISTER_WORKER);\r\n\r\n  // const handleClose = () => {};\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(toggleLoading());\r\n    registerWorker({ variables: { input } })\r\n      .then(() => {\r\n        dispatch(\r\n          addToast({\r\n            message: \"Successfully Registered Worker\",\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n      })\r\n      .catch((err) => {\r\n        addToast({\r\n          message: err.toString(),\r\n          severity: \"error\",\r\n        });\r\n        dispatch(toggleLoading());\r\n      });\r\n    setInput(defaultValue);\r\n    handleClose();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.id === \"maxTasks\") {\r\n      if (isNaN(e.target.value)) {\r\n        console.log(\"not a number\");\r\n        e.target.value = input.maxTasks;\r\n      }\r\n    }\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Register New Task Worker\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Fill in the information below to register the worker.\r\n          </DialogContentText>\r\n          <Grid container spacing={1} sx={{ pl: 1, pr: 1 }}>\r\n            <Grid item xs={12} sm={10}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Task Worker Name\"\r\n                required\r\n                value={input.name}\r\n                fullWidth\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n                helperText=\"Nickname for the worker\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"maxTasks\"\r\n                required\r\n                label=\"Max. Concurrent Jobs\"\r\n                fullWidth\r\n                value={input.maxTasks}\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={5}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                required\r\n                id=\"ipAddress\"\r\n                label=\"IP Address\"\r\n                fullWidth\r\n                value={input.ipAddress}\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_NEW_IMAGE } from \"../../graphql/mutation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToast, toggleLoading } from \"../../slices/appSlice\";\r\n\r\nconst defaultValue = {\r\n  image: \"\",\r\n  tag: \"\",\r\n  description: \"\",\r\n};\r\n\r\nexport default function AddImageDialog(props) {\r\n  const dispatch = useDispatch();\r\n  const { open, handleClose } = props;\r\n  const [input, setInput] = useState(defaultValue);\r\n  const [addNewImage] = useMutation(ADD_NEW_IMAGE);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(input);\r\n    dispatch(toggleLoading());\r\n    addNewImage({ variables: { input } })\r\n      .then(() => {\r\n        dispatch(\r\n          addToast({\r\n            message: \"Successfully Created Image\",\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n      })\r\n      .catch((err) => {\r\n        addToast({\r\n          message: err.toString(),\r\n          severity: \"error\",\r\n        });\r\n        dispatch(toggleLoading());\r\n      });\r\n    setInput(defaultValue);\r\n    handleClose();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Docker Image</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Fill in the information below to add a new docker image.\r\n          </DialogContentText>\r\n          <Grid container spacing={2} sx={{ pl: 1, pr: 1 }}>\r\n            <Grid item xs={12} sm={7}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"image\"\r\n                label=\"Docker Image Name\"\r\n                required\r\n                value={input.image}\r\n                fullWidth\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"tag\"\r\n                required\r\n                label=\"Tag Label\"\r\n                fullWidth\r\n                value={input.tag}\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={11}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                required\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                fullWidth\r\n                variant=\"standard\"\r\n                multiline\r\n                maxRows={4}\r\n                value={input.description}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_IMAGE_REQUEST } from \"../../graphql/mutation\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToast, toggleLoading } from \"../../slices/appSlice\";\r\n\r\nconst defaultValue = {\r\n  image: \"\",\r\n  tag: \"\",\r\n  remark: \"\",\r\n};\r\n\r\nexport default function NewIRDialog(props) {\r\n  const dispatch = useDispatch();\r\n  const { open, handleClose } = props;\r\n  const [input, setInput] = useState(defaultValue);\r\n  const [addImageRequest] = useMutation(ADD_IMAGE_REQUEST);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(input);\r\n    dispatch(toggleLoading());\r\n    addImageRequest({ variables: { input } })\r\n      .then(() => {\r\n        dispatch(\r\n          addToast({\r\n            message: \"Successfully Created Image\",\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n      })\r\n      .catch((err) => {\r\n        addToast({\r\n          message: err.toString(),\r\n          severity: \"error\",\r\n        });\r\n        dispatch(toggleLoading());\r\n      });\r\n    setInput(defaultValue);\r\n    handleClose();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Request for new Docker Image\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Fill in the information to request for a new docker image.\r\n          </DialogContentText>\r\n          <Grid container spacing={2} sx={{ pl: 1, pr: 1 }}>\r\n            <Grid item xs={12} sm={7}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"image\"\r\n                label=\"Docker Image Name\"\r\n                required\r\n                value={input.image}\r\n                fullWidth\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"tag\"\r\n                required\r\n                label=\"Tag Label\"\r\n                fullWidth\r\n                value={input.tag}\r\n                variant=\"standard\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={11}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"remark\"\r\n                label=\"Remark\"\r\n                fullWidth\r\n                variant=\"standard\"\r\n                multiline\r\n                maxRows={4}\r\n                value={input.remark}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n","import Box from \"@material-ui/core/Box\";\r\nimport SpeedDial from \"@material-ui/core/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/core/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/core/SpeedDialAction\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport QueuePlayNextIcon from \"@material-ui/icons/QueuePlayNext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddWorkerDialog from \"../dialogs/AddWorkerDialog\";\r\nimport { useState } from \"react\";\r\nimport AddImageDialog from \"../dialogs/AddImageDialog\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport NewIRDialog from \"../dialogs/NewIRDialog\";\r\n\r\nexport default function CustomSpeedDial() {\r\n  const [currentDialog, setCurrentDialog] = useState(null);\r\n  // @ts-ignore\r\n  const role = useSelector((state) => state.auth.user.role);\r\n  const history = useHistory();\r\n\r\n  const handleClose = () => {\r\n    setCurrentDialog(null);\r\n  };\r\n\r\n  const admin_actions = [\r\n    {\r\n      icon: <QueuePlayNextIcon />,\r\n      name: \"Add Task Worker\",\r\n      onClick: () => setCurrentDialog(0),\r\n    },\r\n    {\r\n      icon: <AddPhotoAlternateIcon />,\r\n      name: \"Add Docker Image\",\r\n      onClick: () => setCurrentDialog(1),\r\n    },\r\n  ];\r\n\r\n  const user_actions = [\r\n    {\r\n      icon: <AddPhotoAlternateIcon />,\r\n      name: \"Request for New Image\",\r\n      onClick: () => setCurrentDialog(2),\r\n    },\r\n    {\r\n      icon: <ListAltIcon />,\r\n      name: \"Add Request\",\r\n      onClick: () => history.push(\"/addRequest\"),\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          height: 200,\r\n          transform: \"translateZ(0px)\",\r\n          flexGrow: 1,\r\n          position: \"fixed\",\r\n          bottom: 20,\r\n          right: 20,\r\n        }}\r\n      >\r\n        <SpeedDial\r\n          ariaLabel=\"SpeedDial basic example\"\r\n          icon={<SpeedDialIcon openIcon={<EditIcon />} />}\r\n        >\r\n          {role === \"USER\"\r\n            ? user_actions.map((action, index) => (\r\n                <SpeedDialAction\r\n                  key={action.name}\r\n                  icon={action.icon}\r\n                  tooltipTitle={action.name}\r\n                  onClick={action.onClick}\r\n                />\r\n              ))\r\n            : admin_actions.map((action, index) => (\r\n                <SpeedDialAction\r\n                  key={action.name}\r\n                  icon={action.icon}\r\n                  tooltipTitle={action.name}\r\n                  onClick={action.onClick}\r\n                />\r\n              ))}\r\n        </SpeedDial>\r\n      </Box>\r\n      <AddWorkerDialog open={currentDialog === 0} handleClose={handleClose} />\r\n      <AddImageDialog open={currentDialog === 1} handleClose={handleClose} />\r\n      <NewIRDialog open={currentDialog === 2} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport SideBar from \"./SideBar\";\r\nimport CustomAppBar from \"./CustomAppBar\";\r\nimport { useState } from \"react\";\r\nimport CustomSpeedDial from \"./CustomSpeedDial\";\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    boxSizing: \"border-box\",\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    maxWidth: \"100%\",\r\n    // backgroundColor: \"cyan\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      maxWidth: `calc(100% - ${drawerWidth}px)`,\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction DrawerLayout(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CustomAppBar classes={classes} handleDrawerToggle={handleDrawerToggle} />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <SideBar\r\n          mobileOpen={mobileOpen}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          classes={classes}\r\n        />\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div style={{ padding: \"0 15px \" }}>{children}</div>\r\n      </main>\r\n      <CustomSpeedDial />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerLayout;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst UnderMaintenance = () => {\r\n  const [counter, setCounter] = useState(6);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(\r\n      () => setCounter((counter) => counter - 1),\r\n      1000\r\n    );\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (counter < 1) return <Redirect to=\"/dashboard\" />;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        minHeight: \"720px\",\r\n      }}\r\n    >\r\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\r\n        This site is under maintanance. <br />\r\n        You will be redirected in {counter} seconds.\r\n      </Typography>\r\n      <img\r\n        src=\"images/maintenance.png\"\r\n        alt=\"maintenance\"\r\n        style={{ maxWidth: \"80%\", width: \"500px\", paddingTop: \"60px\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnderMaintenance;\r\n","import { Typography, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst EmptyInbox = ({ title, offset }) => {\r\n  console.log(offset);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ padding: \"5px\" }}>{offset}</div>\r\n\r\n        <div style={{ flexBasis: \"40%\", paddingLeft: \"5px\" }}>\r\n          <img\r\n            src=\"/images/empty_inbox.svg\"\r\n            alt=\"Empty Requests\"\r\n            width=\"100%\"\r\n          ></img>\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyInbox;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Box, Button, Divider, Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IMAGE_REQUESTS } from \"../../graphql/query\";\r\nimport CustomCard from \"../util/CustomCard\";\r\nimport EmptyInbox from \"../util/EmptyInbox\";\r\n\r\nconst ImageRequests = () => {\r\n  const { loading, error, data } = useQuery(IMAGE_REQUESTS);\r\n\r\n  return (\r\n    <CustomCard>\r\n      {loading ? <div>Loading...</div> : null}\r\n      {error ? `Error! ${error.message}` : null}\r\n      <DataRender data={data} />\r\n    </CustomCard>\r\n  );\r\n};\r\n\r\nconst DataRender = ({ data }) => {\r\n  if (!data) return null;\r\n  if (data.imageRequests.length > 0) {\r\n    return (\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            flexBasis: \"40%\",\r\n            paddingTop: \"8px\",\r\n            flexShrink: 2,\r\n          }}\r\n        >\r\n          <img\r\n            src=\"images/image_request.svg\"\r\n            alt=\"RequestCount\"\r\n            width=\"100%\"\r\n          ></img>\r\n        </div>\r\n        <div style={{ flexGrow: 2, paddingLeft: \"12px\" }}>\r\n          <div\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Image Requests\r\n            </Typography>\r\n            <div>\r\n              <Box sx={{ p: 1 }}>\r\n                <Typography component=\"span\">count: </Typography>\r\n                <Typography variant=\"h3\" gutterBottom component=\"span\">\r\n                  <b>{data.imageRequests.length}</b>\r\n                </Typography>\r\n                <br />\r\n              </Box>\r\n              <Divider />\r\n              <Box sx={{ pt: 1 }}>\r\n                <Button\r\n                  component={Link}\r\n                  to=\"/imageRequests\"\r\n                  sx={{ float: \"right\" }}\r\n                >\r\n                  View All\r\n                </Button>\r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n    );\r\n  } else {\r\n    const offset = (\r\n      <div style={{ padding: \"5px\" }}>\r\n        <Typography>All Checked ✔️✔️</Typography>\r\n        <Typography>No new image requests 🙂🙂</Typography>\r\n      </div>\r\n    );\r\n    return <EmptyInbox title={\"Docker Image Requests\"} offset={offset} />;\r\n  }\r\n};\r\n\r\nexport default ImageRequests;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { GET_DOCKER_IMAGES } from \"../../graphql/query\";\r\nimport CustomCard from \"../util/CustomCard\";\r\n\r\nconst Ranking = (props) => {\r\n  const { images } = props;\r\n  const sorted = images\r\n    .slice()\r\n    .sort((a, b) => b.usageCount - a.usageCount)\r\n    .slice(0, 3);\r\n\r\n  return (\r\n    <List dense>\r\n      {sorted.map((image, index) => (\r\n        <ListItem key={index} disableGutters>\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              variant=\"rounded\"\r\n              src={`images/top${index + 1}.svg`}\r\n              alt={`Top${index + 1}`}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={<b>{sorted[index].name}</b>}\r\n            secondary={\"❤️ \".concat(sorted[index].usageCount)}\r\n          />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default function TopImages() {\r\n  const { loading, error, data } = useQuery(GET_DOCKER_IMAGES);\r\n\r\n  return (\r\n    <CustomCard>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Top Images\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {loading ? <div>Loading...</div> : null}\r\n        {error ? `Error! ${error.message}` : null}\r\n        {data ? <Ranking images={data.dockerImages} /> : null}\r\n        <div style={{ flexBasis: \"40%\", paddingLeft: \"5px\" }}>\r\n          <img\r\n            src=\"images/top_images.svg\"\r\n            alt=\"RequestCount\"\r\n            width=\"100%\"\r\n          ></img>\r\n        </div>\r\n      </Box>\r\n    </CustomCard>\r\n  );\r\n}\r\n","import { Box, Typography } from \"@material-ui/core\";\r\nimport CustomCard from \"../util/CustomCard\";\r\n\r\nexport default function TotalIssues() {\r\n  return (\r\n    <CustomCard>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Total Issues\r\n          </Typography>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            <b>12</b>\r\n          </Typography>\r\n        </div>\r\n        <div style={{ flexBasis: \"40%\", paddingTop: \"8px\" }}>\r\n          <img\r\n            src=\"images/total_issues.svg\"\r\n            alt=\"IssueCount\"\r\n            width=\"100%\"\r\n          ></img>\r\n        </div>\r\n      </Box>\r\n    </CustomCard>\r\n  );\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { GET_ALL_REQUESTS } from \"../../graphql/query\";\r\nimport CustomCard from \"../util/CustomCard\";\r\n\r\nexport default function TotalRequests() {\r\n  const { loading, error, data } = useQuery(GET_ALL_REQUESTS);\r\n\r\n  return (\r\n    <CustomCard>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Total Requests\r\n          </Typography>\r\n\r\n          {loading ? <div>Loading...</div> : null}\r\n          {error ? `Error! ${error.message}` : null}\r\n          {data ? (\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              <b>{data.allRequests.length}</b>\r\n            </Typography>\r\n          ) : null}\r\n        </div>\r\n        <div style={{ flexBasis: \"40%\", paddingTop: \"8px\" }}>\r\n          <img\r\n            src=\"images/total_requests.svg\"\r\n            alt=\"RequestCount\"\r\n            width=\"100%\"\r\n          ></img>\r\n        </div>\r\n      </Box>\r\n    </CustomCard>\r\n  );\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { GET_ALL_USERS } from \"../../graphql/query\";\r\nimport CustomCard from \"../util/CustomCard\";\r\n\r\nexport default function TotalUsers() {\r\n  const { loading, error, data } = useQuery(GET_ALL_USERS);\r\n\r\n  return (\r\n    <CustomCard>\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Total Users\r\n          </Typography>\r\n\r\n          {loading ? <div>Loading...</div> : null}\r\n          {error ? `Error! ${error.message}` : null}\r\n          {data ? (\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              <b>{data.allUsers.length}</b>\r\n            </Typography>\r\n          ) : null}\r\n        </div>\r\n        <div style={{ flexBasis: \"40%\", paddingTop: \"8px\" }}>\r\n          <img src=\"images/total_users.svg\" alt=\"UserCount\" width=\"100%\"></img>\r\n        </div>\r\n      </Box>\r\n    </CustomCard>\r\n  );\r\n}\r\n","import { makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  image: {\r\n    // width: \"80%\",\r\n    // maxHeight: \"128px\",\r\n    minWidth: \"256px\",\r\n    margin: \"0px 32px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function WelcomeBack() {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root} sx={{ bgcolor: \"rgb(200, 250, 205)\" }}>\r\n      <div>\r\n        <Typography gutterBottom>Hello 👋,</Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {user.name}!\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          Welcome back to GPU Yard. Keep hustling and have a nice day 🙂😊\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.image}>\r\n        <img src=\"images/illustration_seo.svg\" alt=\"welcome\" width=\"100%\"></img>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Box, Button, Divider, Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { WORKER_APPLICATIONS } from \"../../graphql/query\";\r\nimport CustomCard from \"../util/CustomCard\";\r\nimport EmptyInbox from \"../util/EmptyInbox\";\r\n\r\nconst WorkerApplication = () => {\r\n  const { loading, error, data } = useQuery(WORKER_APPLICATIONS);\r\n\r\n  return (\r\n    <CustomCard>\r\n      {loading ? <div>Loading...</div> : null}\r\n      {error ? `Error! ${error.message}` : null}\r\n      <DataRender data={data} />\r\n    </CustomCard>\r\n  );\r\n};\r\n\r\nconst DataRender = ({ data }) => {\r\n  if (!data) return null;\r\n  if (data.workerApplications.length > 0) {\r\n    return (\r\n      <Box\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            flexBasis: \"40%\",\r\n            paddingTop: \"8px\",\r\n            flexShrink: 2,\r\n          }}\r\n        >\r\n          <img\r\n            src=\"images/worker_application.svg\"\r\n            alt=\"RequestCount\"\r\n            width=\"100%\"\r\n          ></img>\r\n        </div>\r\n        <div style={{ flexGrow: 2, paddingLeft: \"12px\" }}>\r\n          <div\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              New Worker Applications\r\n            </Typography>\r\n            <div>\r\n              <Box sx={{ p: 1 }}>\r\n                <Typography component=\"span\">count: </Typography>\r\n                <Typography variant=\"h3\" gutterBottom component=\"span\">\r\n                  <b>{data.workerApplications.length}</b>\r\n                </Typography>\r\n                <br />\r\n              </Box>\r\n              <Divider />\r\n              <Box sx={{ pt: 1 }}>\r\n                <Button\r\n                  component={Link}\r\n                  to=\"/workerApplications\"\r\n                  sx={{ float: \"right\" }}\r\n                >\r\n                  View All\r\n                </Button>\r\n              </Box>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n    );\r\n  } else {\r\n    const offset = (\r\n      <div style={{ padding: \"5px\" }}>\r\n        <Typography>All Checked ✔️✔️</Typography>\r\n        <Typography>No new applications 🙂🙂</Typography>\r\n      </div>\r\n    );\r\n    return <EmptyInbox title={\"New Worker Applications\"} offset={offset} />;\r\n  }\r\n};\r\n\r\nexport default WorkerApplication;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Chip, List, ListItem, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LIST_WORKERS } from \"../../graphql/query\";\r\nimport CustomCard from \"../util/CustomCard\";\r\n\r\nconst styles = {\r\n  list: {\r\n    width: \"100%\",\r\n    maxHeight: \"200px\",\r\n    overflow: \"auto\",\r\n    ml: -1,\r\n    mr: 1,\r\n    \"& div\": {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      //   margin: \"0 -5px\",\r\n      //   padding: \"0 5px\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function WorkersStatus() {\r\n  const { loading, error, data } = useQuery(LIST_WORKERS);\r\n\r\n  return (\r\n    <CustomCard>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Workers Status\r\n      </Typography>\r\n      {loading ? <div>Loading...</div> : null}\r\n      {data ? <WorkerList workers={data.workerList} /> : null}\r\n      {error ? `Error! ${error.message}` : null}\r\n    </CustomCard>\r\n  );\r\n}\r\n\r\nconst WorkerList = ({ workers }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <List sx={styles.list}>\r\n      {workers.map((worker) => (\r\n        <ListItem\r\n          key={worker.id}\r\n          button\r\n          onClick={() => {\r\n            history.push(\"/workers/\" + worker.id);\r\n          }}\r\n        >\r\n          <Typography>{worker.name}</Typography>\r\n          <Chip\r\n            label={worker.status ? worker.status : \"Checking\"}\r\n            // @ts-ignore\r\n            color={worker.status === \"Active\" ? \"success\" : \"default\"}\r\n            style={{\r\n              minWidth: \"80px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/client\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MY_REQUESTS } from \"../../graphql/query\";\r\nimport CustomTable from \"../util/CustomTable\";\r\nimport { STATUS_CHIPS } from \"../util/StatusChips\";\r\n\r\nfunction createData(requests, history) {\r\n  var arr = [];\r\n  requests.forEach((item) => {\r\n    const { id, name, status, createdAt, image, assignedTo } = item;\r\n    const statusChip = STATUS_CHIPS[status]\r\n      ? STATUS_CHIPS[status]\r\n      : STATUS_CHIPS[\"DEFAULT\"];\r\n    const action = () => {\r\n      history.push(`/requests/${id}`);\r\n    };\r\n    arr.push({\r\n      name,\r\n      statusChip,\r\n      createdAt,\r\n      image,\r\n      assignedTo,\r\n      action,\r\n    });\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst MyRequestsList = () => {\r\n  const { loading, error, data } = useQuery(MY_REQUESTS);\r\n  const history = useHistory();\r\n\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <div>`Error! ${error.message}`</div>;\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"Name\", minWidth: 170 },\r\n    { id: \"statusChip\", label: \"Status\" },\r\n    { id: \"image\", label: \"Docker Image\" },\r\n    { id: \"createdAt\", label: \"Created At\" },\r\n  ];\r\n\r\n  const rows = createData(data.myRequests, history);\r\n\r\n  return <CustomTable rows={rows} columns={columns} />;\r\n};\r\n\r\nexport default MyRequestsList;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ImageRequests from \"../components/dashboard/ImageRequests\";\r\nimport TopImages from \"../components/dashboard/TopImages\";\r\nimport TotalIssues from \"../components/dashboard/TotalIssues\";\r\nimport TotalRequests from \"../components/dashboard/TotalRequests\";\r\nimport TotalUsers from \"../components/dashboard/TotalUsers\";\r\nimport WelcomeBack from \"../components/dashboard/WelcomeBack\";\r\nimport WorkerApplication from \"../components/dashboard/WorkerApplication\";\r\nimport WorkersStatus from \"../components/dashboard/WorkersStatus\";\r\nimport DrawerLayout from \"../components/layout/DrawerLayout\";\r\nimport MyRequestsList from \"../components/request/MyRequestList\";\r\n\r\nconst Dashboard = () => {\r\n  // @ts-ignore\r\n  const role = useSelector((state) => state.auth.user.role);\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <div style={{ marginBottom: \"32px\", marginTop: \"16px\" }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} lg={8}>\r\n            <WelcomeBack />\r\n          </Grid>\r\n          <Grid item xs={12} lg={4}>\r\n            <WorkersStatus />\r\n          </Grid>\r\n\r\n          {role === \"ADMIN\" ? (\r\n            <>\r\n              <Grid item xs={12} lg={6}>\r\n                <WorkerApplication />\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <ImageRequests />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} lg={4}>\r\n                <TotalUsers />\r\n              </Grid>\r\n              <Grid item xs={12} lg={4}>\r\n                <TotalRequests />\r\n              </Grid>\r\n              <Grid item xs={12} lg={4}>\r\n                <TotalIssues />\r\n              </Grid>\r\n            </>\r\n          ) : null}\r\n          {role === \"USER\" ? (\r\n            <Grid item xs={12} lg={6}>\r\n              <MyRequestsList />\r\n            </Grid>\r\n          ) : null}\r\n\r\n          <Grid item xs={12} lg={6}>\r\n            <TopImages />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { Avatar, IconButton, Paper } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  root: {\r\n    p: 8,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    // height: \"400px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n};\r\n\r\nconst AvatarPicker = () => {\r\n  return (\r\n    <Paper elevation={3} sx={styles.root}>\r\n      <div>\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: \"none\" }}\r\n          id=\"raised-button-file\"\r\n          multiple\r\n          type=\"file\"\r\n        />\r\n        <label htmlFor=\"raised-button-file\">\r\n          <IconButton component=\"span\">\r\n            <Avatar sx={{ width: 128, height: 128 }} />\r\n          </IconButton>\r\n        </label>\r\n      </div>\r\n      <div\r\n        style={{ maxWidth: \"256px\", textAlign: \"center\", paddingTop: \"15px\" }}\r\n      >\r\n        Click on the avatar to upload new profile pic\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AvatarPicker;\r\n","import { Button, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst styles = {\r\n  root: {\r\n    p: 4,\r\n    display: \"flex\",\r\n    // justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  submit: {\r\n    mt: 3,\r\n    float: \"right\",\r\n  },\r\n};\r\n\r\nconst EditProfileForm = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert(\"Function not yet implemented\");\r\n    // dispatch(\r\n    //   loginUser({\r\n    //     credentials,\r\n    //     history,\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={styles.root}>\r\n      <form\r\n        style={{\r\n          width: \"100%\", // Fix IE 11 issue.\r\n          mt: 2,\r\n        }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              disabled\r\n              name=\"fullName\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"fullname\"\r\n              label=\"Full Name\"\r\n              autoFocus\r\n              value={user.name}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              name=\"phone\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"phone\"\r\n              label=\"Phone Number\"\r\n              value={user.phone}\r\n              autoFocus\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              disabled\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              value={user.email}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          size=\"large\"\r\n          sx={styles.submit}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default EditProfileForm;\r\n","import { Container, Grid, Typography } from \"@material-ui/core\";\r\nimport DrawerLayout from \"../../components/layout/DrawerLayout\";\r\nimport AvatarPicker from \"../../components/user/AvatarPicker\";\r\nimport EditProfileForm from \"../../components/user/EditProfileForm\";\r\n\r\nconst EditProfile = () => {\r\n  return (\r\n    <DrawerLayout>\r\n      <Container sx={{ mb: 6 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4 }}>\r\n          <b>Edit Profile</b>\r\n        </Typography>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} lg={4}>\r\n            <AvatarPicker />\r\n          </Grid>\r\n          <Grid item xs={12} lg={8}>\r\n            <EditProfileForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { Chip, Container, Divider, Typography } from \"@material-ui/core\";\r\nimport DrawerLayout from \"../../components/layout/DrawerLayout\";\r\nimport CustomCard from \"../../components/util/CustomCard\";\r\nimport { LIST_WORKERS } from \"../../graphql/query\";\r\n\r\nconst WorkerDetail = (props) => {\r\n  const id = props.match.params.id;\r\n\r\n  const { loading, error, data } = useQuery(LIST_WORKERS);\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <Container sx={{ mb: 6 }}>\r\n        {loading ? <div>Loading...</div> : null}\r\n        {error ? `Error! ${error.message}` : null}\r\n        {data ? <WorkerInfo workers={data.workerList} id={id} /> : null}\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nconst WorkerInfo = (props) => {\r\n  const { workers, id } = props;\r\n  const worker = workers.find((worker) => worker.id === id);\r\n  if (worker == null) return <div>Worker not found!!</div>;\r\n  const { name, maxTasks, ipAddress, status, runningTasks } = worker;\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4, pl: 2 }}>\r\n        <b>Task Worker Detail</b>\r\n      </Typography>\r\n      <CustomCard>\r\n        <Typography variant=\"h6\">Task Worker ID:</Typography>\r\n        <Typography variant=\"body1\">{id}</Typography>\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Name:</Typography>\r\n        <Typography variant=\"body1\">{name}</Typography>\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Status:</Typography>\r\n        <Chip\r\n          label={status ? status : \"Checking\"}\r\n          // @ts-ignore\r\n          color={status === \"Active\" ? \"success\" : \"default\"}\r\n        />\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Running Task:</Typography>\r\n        <Typography variant=\"body1\">{runningTasks.length}</Typography>\r\n\r\n        <CustomDivider />\r\n        <Typography variant=\"h6\">Max Concurrent Tasks:</Typography>\r\n        <Typography variant=\"body1\">{maxTasks}</Typography>\r\n\r\n        {ipAddress ? (\r\n          <div>\r\n            <CustomDivider />\r\n            <Typography variant=\"h6\">IP Address:</Typography>\r\n            <Typography variant=\"body1\">{ipAddress}</Typography>\r\n          </div>\r\n        ) : null}\r\n      </CustomCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomDivider = () => {\r\n  return <Divider sx={{ mt: 3, mb: 2 }} />;\r\n};\r\n\r\nexport default WorkerDetail;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n  Chip,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DrawerLayout from \"../components/layout/DrawerLayout\";\r\nimport CustomTable from \"../components/util/CustomTable\";\r\nimport { GET_ALL_USERS } from \"../graphql/query\";\r\n\r\nfunction createData(users, history) {\r\n  var arr = [];\r\n  users.forEach((item) => {\r\n    const { id, name, role, status, email, phone } = item;\r\n    const statusChip = (\r\n      <Chip\r\n        label={status}\r\n        // @ts-ignore\r\n        color={status === \"Active\" ? \"success\" : \"default\"}\r\n      />\r\n    );\r\n    const action = () => {\r\n      history.push(`/users/${id}`);\r\n    };\r\n    arr.push({ id, name, role, statusChip, email, phone, action });\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst UserTable = ({ history }) => {\r\n  const { loading, data, error } = useQuery(GET_ALL_USERS);\r\n\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <div>`Error! ${error.message}`</div>;\r\n\r\n  const columns = [\r\n    { id: \"id\", label: \"User ID\" },\r\n    { id: \"name\", label: \"Name\", minWidth: 170 },\r\n    { id: \"role\", label: \"Role\", minWidth: 100 },\r\n    { id: \"statusChip\", label: \"Status\", minWidth: 100, align: \"center\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"phone\", label: \"Phone\" },\r\n  ];\r\n\r\n  const rows = createData(data.allUsers, history);\r\n\r\n  return <CustomTable rows={rows} columns={columns} />;\r\n};\r\n\r\nconst UsersPage = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <Container>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h1\"\r\n          gutterBottom\r\n          sx={{ pb: 2, pl: 2 }}\r\n        >\r\n          <b>Users</b>\r\n        </Typography>\r\n        <UserTable history={history} />\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n  Chip,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DrawerLayout from \"../components/layout/DrawerLayout\";\r\nimport CustomTable from \"../components/util/CustomTable\";\r\nimport { LIST_WORKERS } from \"../graphql/query\";\r\n\r\nfunction createData(workers, history) {\r\n  var arr = [];\r\n  workers.forEach((item) => {\r\n    const { id, name, status, runningTasks, maxTasks, ipAddress } = item;\r\n    const runMax = runningTasks.length + \"/\" + maxTasks;\r\n    const statusChip = (\r\n      <Chip\r\n        label={status}\r\n        // @ts-ignore\r\n        color={status === \"Active\" ? \"success\" : \"default\"}\r\n      />\r\n    );\r\n    const action = () => {\r\n      history.push(`/workers/${id}`);\r\n    };\r\n    arr.push({ id, name, statusChip, runMax, ipAddress, action });\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst WorkerTable = ({ history }) => {\r\n  const { loading, data, error } = useQuery(LIST_WORKERS);\r\n  // @ts-ignore\r\n  const role = useSelector((state) => state.auth.user.role);\r\n\r\n  if (loading) return <CircularProgress />;\r\n  if (error) return <div>`Error! ${error.message}`</div>;\r\n\r\n  const columns = [\r\n    { id: \"id\", label: \"Worker ID\" },\r\n    { id: \"name\", label: \"Name\" },\r\n    { id: \"statusChip\", label: \"Status\", minWidth: 86, align: \"center\" },\r\n    { id: \"runMax\", label: \"Slots\", minWidth: 100, align: \"center\" },\r\n    ...(role === \"ADMIN\" ? [{ id: \"ipAddress\", label: \"IP Address\" }] : []),\r\n  ];\r\n\r\n  const rows = createData(data.workerList, history);\r\n\r\n  return <CustomTable rows={rows} columns={columns} />;\r\n};\r\n\r\nconst WorkersPage = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <DrawerLayout>\r\n      <Container>\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"h1\"\r\n          gutterBottom\r\n          sx={{ pb: 2, pl: 2 }}\r\n        >\r\n          <b>Workers</b>\r\n        </Typography>\r\n        <WorkerTable history={history} />\r\n      </Container>\r\n    </DrawerLayout>\r\n  );\r\n};\r\n\r\nexport default WorkersPage;\r\n","import { Dashboard, People, Work } from \"@material-ui/icons\";\r\nimport UnderMaintenance from \"../components/util/UnderMaintenance\";\r\nimport MyDashboard from \"../pages/Dashboard\";\r\nimport EditProfile from \"../pages/subpages/EditProfile\";\r\nimport WorkerDetail from \"../pages/subpages/WorkerDetail\";\r\nimport UsersPage from \"../pages/UsersPage\";\r\nimport WorkersPage from \"../pages/WorkersPage\";\r\n\r\nexport const BACKEND_HOST = \"http://3.219.108.65:2358/\";\r\n\r\nconst DASHBOARD = {\r\n  icon: <Dashboard />,\r\n  text: \"Dashboard\",\r\n  path: \"/dashboard\",\r\n  page: MyDashboard,\r\n};\r\n\r\nconst USERS = {\r\n  icon: <People />,\r\n  text: \"Users\",\r\n  path: \"/users\",\r\n  page: UsersPage,\r\n};\r\n\r\nconst WORKERS = {\r\n  icon: <Work />,\r\n  text: \"Workers\",\r\n  path: \"/workers\",\r\n  page: WorkersPage,\r\n};\r\n\r\nexport const GENERAL_PAGES = {\r\n  ADMIN: [DASHBOARD, USERS, WORKERS],\r\n  USER: [DASHBOARD, WORKERS],\r\n};\r\n\r\nexport const COMMON_PAGES = [\r\n  {\r\n    path: \"/editProfile\",\r\n    page: EditProfile,\r\n  },\r\n  { path: \"/workers/:id\", page: WorkerDetail },\r\n  {\r\n    path: \"/settings\",\r\n    page: UnderMaintenance,\r\n  },\r\n];\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_REQUEST = gql`\r\n  mutation CreateRequest($input: CreateRequestInput!) {\r\n    createRequest(input: $input) {\r\n      id\r\n      createdAt\r\n      title\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REGISTER_WORKER = gql`\r\n  mutation RegisterWorker($input: RegisterWorkerInput!) {\r\n    registerWorker(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const APPROVE_WORKER = gql`\r\n  mutation ApproveWorker($input: String!) {\r\n    approveWorker(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const APPROVE_IMAGE = gql`\r\n  mutation ApproveImage($input: String!) {\r\n    approveImage(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_NEW_IMAGE = gql`\r\n  mutation AddNewImage($input: AddNewImageInput!) {\r\n    addNewImage(input: $input) {\r\n      id\r\n      image\r\n      tag\r\n      description\r\n    }\r\n  }\r\n`;\r\nexport const ADD_IMAGE_REQUEST = gql`\r\n  mutation AddImageRequest($input: AddImageRequestInput!) {\r\n    addImageRequest(input: $input) {\r\n      id\r\n      image\r\n      tag\r\n      remark\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SET_READ_NOTIFICATION = gql`\r\n  mutation SetReadNotification($input: String!) {\r\n    setReadNotification(input: $input) {\r\n      id\r\n      isRead\r\n    }\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(3),\r\n  },\r\n\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  container: {\r\n    maxHeight: 450,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n  },\r\n}));\r\n\r\nconst CustomTable = (props) => {\r\n  const { title, columns, rows } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const classes = useStyles();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n\r\n      <TableContainer className={classes.container}>\r\n        <Table\r\n          className={classes.table}\r\n          stickyHeader\r\n          aria-labelledby=\"tableTitle\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{\r\n                    minWidth: column.minWidth,\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={index}\r\n                    onClick={row.action ? row.action : null}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toggleLoading, addToast } from \"./appSlice\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { BACKEND_HOST } from \"../app/constants\";\r\n\r\n// init states\r\nvar initialState = {\r\n  user: null,\r\n  jwt: null,\r\n};\r\n\r\nif (localStorage.auth) {\r\n  const auth = localStorage.getItem(\"auth\");\r\n  if (auth) {\r\n    const { profile, jwt } = JSON.parse(auth);\r\n    const current_time = new Date().getTime() / 1000;\r\n    const decoded = jwt_decode(jwt);\r\n    // @ts-ignore\r\n    if (current_time < decoded.exp) {\r\n      initialState = { user: profile, jwt };\r\n    }\r\n  }\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    clearAuth: (state) => {\r\n      state.user = null;\r\n      state.jwt = null;\r\n    },\r\n    setAuth: (state, action) => {\r\n      const { profile, jwt } = action.payload;\r\n      state.user = profile;\r\n      state.jwt = jwt;\r\n    },\r\n  },\r\n});\r\n\r\n// exports\r\nconst { setAuth, clearAuth } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n\r\n// thunks\r\nexport const loginUser = ({ credentials, history }) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleLoading());\r\n    console.log(\"User logging in\");\r\n\r\n    axios\r\n      .post(BACKEND_HOST + \"authenticate\", credentials)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        localStorage.setItem(\"auth\", JSON.stringify(res.data));\r\n        dispatch(setAuth(res.data));\r\n        dispatch(\r\n          addToast({\r\n            message: \"Successfully logged in\",\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        history.push(\"/dashboard\");\r\n        dispatch(toggleLoading());\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          addToast({\r\n            message: err.toString(),\r\n            severity: \"error\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n      });\r\n  };\r\n};\r\n\r\nexport const registerUser = ({ input, history }) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleLoading());\r\n    console.log(\"Registering User\");\r\n\r\n    axios\r\n      .post(BACKEND_HOST + \"signup\", input)\r\n      .then((res) => {\r\n        dispatch(\r\n          addToast({\r\n            message: \"Successfully Signed Up\",\r\n            severity: \"success\",\r\n          })\r\n        );\r\n        history.push(\"/login\");\r\n        dispatch(toggleLoading());\r\n      })\r\n      .catch((err) => {\r\n        dispatch(\r\n          addToast({\r\n            message: err.toString(),\r\n            severity: \"error\",\r\n          })\r\n        );\r\n        dispatch(toggleLoading());\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutUser = (history) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleLoading());\r\n    localStorage.clear();\r\n    dispatch(clearAuth());\r\n    dispatch(toggleLoading());\r\n  };\r\n};\r\n","// @ts-nocheck\r\nimport { Chip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const STATUS_CHIPS = {\r\n  NEW: <Chip label=\"Pending\" />,\r\n  COMPLETED: <Chip label=\"Completed\" color=\"success\" />,\r\n  PROCESSING: <Chip label=\"Processing\" color=\"info\" />,\r\n  ERROR: <Chip label=\"Error\" color=\"error\" />,\r\n  DEFAULT: <Chip label=\"Unknown\" color=\"warning\" />,\r\n};\r\n"],"sourceRoot":""}